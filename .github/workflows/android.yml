name: Android CI

on:
  push:
    branches: [ "main" ]
    paths:
      - 'tailscale-android/**'
      - '.github/workflows/android.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'tailscale-android/**'
      - '.github/workflows/android.yml'

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Copy build scripts
      run: |
        cd tailscale-android
        mkdir -p scripts
        cp docker/DockerFile.amd64-build scripts/
        cp scripts/docker-build-apt-get.sh scripts/

    - name: Build Docker image
      uses: docker/build-push-action@v5
      timeout-minutes: 30
      with:
        context: tailscale-android
        file: tailscale-android/docker/DockerFile.amd64-build
        tags: tailscale-android-build:latest
        push: false
        load: true
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1
          DOCKER_BUILDKIT=1
          ANDROID_SDK_VERSION=34
          ANDROID_BUILD_TOOLS_VERSION=34.0.0
          ANDROID_NDK_VERSION=23.1.7779620

    - name: Move cache
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Build APK
      timeout-minutes: 45
      run: |
        cd tailscale-android
        echo "Building APK using Docker..."
        # Create gradle cache directory with correct permissions
        mkdir -p $HOME/.gradle
        docker run --rm \
          -v $PWD:/build/tailscale-android \
          -v $HOME/.gradle:/root/.gradle \
          -v /tmp/android-cache:/root/.android \
          -e BUILD_NUMBER=${{ github.run_number }} \
          -e GIT_COMMIT=${{ github.sha }} \
          -e CI=true \
          -e GRADLE_OPTS="-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true" \
          --user $(id -u):$(id -g) \
          --memory=7g \
          --cpus=2 \
          tailscale-android-build \
          bash -c "make clean && make androidsdk && TERM=dumb make apk"

    - name: Verify build artifacts
      run: |
        cd tailscale-android
        if [ -f "tailscale-debug.apk" ]; then
          echo "Build successful"
          echo "APK info:"
          ls -lh tailscale-debug.apk
        else
          echo "Build failed - APK not found"
          exit 1
        fi

    - name: Upload APK
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: tailscale-debug
        path: tailscale-android/tailscale-debug.apk
        if-no-files-found: error
        
    - name: Build Summary
      if: always()
      run: |
        {
          echo "## Build Results :package:"
          echo ""
          echo "### Build Info"
          echo "- Start Time: ${{ github.event.repository.pushed_at }}"
          echo "- End Time: $(date '+%Y-%m-%d %H:%M:%S UTC')"
          echo "- Runner: \`${{ runner.os }}\`"
          echo "- Docker Image: tailscale-android-build"
          echo "- Commit: \`${{ github.sha }}\`"
          echo "- Build Number: \`${{ github.run_number }}\`"
          echo "- Go Version: \`$(docker run --rm tailscale-android-build go version)\`"
          echo ""
          if [ -f "tailscale-android/tailscale-debug.apk" ]; then
            SIZE=$(ls -lh tailscale-android/tailscale-debug.apk | awk '{print $5}')
            echo "✅ Build completed successfully"
            echo "- APK Size: $SIZE"
            echo "- SHA256: \`$(sha256sum tailscale-android/tailscale-debug.apk | cut -d' ' -f1)\`"
            echo "- Output Path: \`tailscale-android/tailscale-debug.apk\`"
            echo "- MD5: \`$(md5sum tailscale-android/tailscale-debug.apk | cut -d' ' -f1)\`"
            echo "- File Type: \`$(file tailscale-android/tailscale-debug.apk)\`"
          else
            echo "❌ Build failed"
            echo "- APK not found"
            echo "- Check the build logs for more details"
          fi
        } >> $GITHUB_STEP_SUMMARY
