name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./tailscale-android
    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        
    - name: Set up Android SDK
      run: |
        mkdir -p $ANDROID_HOME/cmdline-tools
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-9477386_latest.zip
        mv cmdline-tools $ANDROID_HOME/cmdline-tools/latest
        rm commandlinetools-linux-9477386_latest.zip
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --update
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager 'platforms;android-34' 'extras;android;m2repository' 'ndk;23.1.7779620' 'platform-tools' 'build-tools;34.0.0'
      
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('android/**/*.gradle*', 'android/**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Set up tool directory
      run: |
        mkdir -p tool
        echo '#!/bin/bash' > tool/go
        echo 'exec go "$@"' >> tool/go
        chmod +x tool/go

    - name: Build AAR Library
      env:
        TS_USE_TOOLCHAIN: "1"
        GOBIN: ${{ github.workspace }}/tailscale-android/android/build/go/bin
      run: |
        export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PWD/tool:$PATH
        mkdir -p android/build/go/bin
        go install golang.org/x/mobile/cmd/gobind@latest
        go install golang.org/x/mobile/cmd/gomobile@latest
        $GOBIN/gomobile init
        make libtailscale version
        
    - name: Build APK
      run: |
        cd android
        chmod +x ./gradlew
        ./gradlew clean assembleDebug --stacktrace
      
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: tailscale-android/android/build/outputs/apk/debug/android-debug.apk
